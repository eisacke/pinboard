{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/board.js","js/controllers/boards.js","js/controllers/main.js","js/models/pin.js","js/models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","Board","$resource","id","update","method","BoardsIndexController","boardsIndex","all","query","BoardsNewController","create","save","boardsNew","board","BoardsShowController","deleteBoard","boardsShow","$remove","get","params","delete","isLoggedIn","isAuthenticated","BoardsEditController","boardsEdit","$update","MainController","$rootScope","logout","secureState","e","toState","main","message","protectedStates","includes","name","preventDefault","$on","Pin","User","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('pinboardApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html'\n      // controller: 'LoginController as login'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('boardsIndex', {\n      url: '/boards',\n      templateUrl: '/templates/boards/index.html',\n      controller: 'BoardsIndexController as boardsIndex'\n    })\n    .state('boardsNew', {\n      url: '/boards/new',\n      templateUrl: '/templates/boards/new.html',\n      controller: 'BoardsNewController as boardsNew'\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('pinboardApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('home');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('pinboardApp')\n  .factory('Board', Board);\n\nBoard.$inject = ['$resource'];\nfunction Board($resource) {\n  return new $resource('/boards/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('pinboardApp')\n  .controller('BoardsIndexController', BoardsIndexController)\n  .controller('BoardsNewController', BoardsNewController)\n  .controller('BoardsShowController', BoardsShowController)\n  .controller('BoardsEditController', BoardsEditController);\n\nBoardsIndexController.$inject = ['Board'];\nfunction BoardsIndexController(Board) {\n  const boardsIndex = this;\n\n  boardsIndex.all = Board.query();\n}\n\nBoardsNewController.$inject = ['Board', '$state'];\nfunction BoardsNewController(Board, $state) {\n  const boardsNew = this;\n\n  boardsNew.board = {};\n\n  function create() {\n    Board.save(boardsNew.board, () => {\n      $state.go('boardsIndex');\n    });\n  }\n\n  boardsNew.create = create;\n}\n\nBoardsShowController.$inject = ['Board', '$state', '$auth'];\nfunction BoardsShowController(Board, $state, $auth) {\n  const boardsShow = this;\n\n  boardsShow.board = Board.get($state.params);\n\n  function deleteBoard() {\n    boardsShow.board.$remove(() => {\n      $state.go('boardsIndex');\n    });\n  }\n\n  boardsShow.delete = deleteBoard;\n  boardsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nBoardsEditController.$inject = ['Board', '$state'];\nfunction BoardsEditController(Board, $state) {\n  const boardsEdit = this;\n\n  boardsEdit.board = Board.get($state.params);\n\n  function update() {\n    boardsEdit.board.$update(() => {\n      $state.go('boardsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('pinboardApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('home');\n      });\n  }\n\n  main.logout = logout;\n\n  main.message = null;\n  // const protectedStates = ['filmsEdit', 'filmsNew'];\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n}\n","angular.module('pinboardApp')\n  .factory('Pin', Pin);\n\nPin.$inject = ['$resource'];\nfunction Pin($resource) {\n  return new $resource('/pins/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('pinboardApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}