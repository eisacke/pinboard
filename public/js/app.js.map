{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/board.js","js/controllers/boards.js","js/controllers/main.js","js/models/pin.js","js/models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","Board","$resource","id","update","method","BoardsIndexController","boardsIndex","all","query","BoardsProfileController","boardsProfile","currentUser","getPayload","_id","testing","BoardsNewController","create","save","boardsNew","board","BoardsShowController","deletePin","pin","index","boardsShow","pins","indexOf","splice","$update","toggleForm","formVisible","createPin","push","like","likes","belongsToUser","get","params","$promise","isLoggedIn","isAuthenticated","BoardsEditController","boardsEdit","deleteBoard","$remove","delete","MainController","$rootScope","toggleNav","main","menuVisible","logout","secureState","e","toState","message","protectedStates","includes","name","preventDefault","$on","Pin","User","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('pinboardApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html'\n      // controller: 'LoginController as login'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('profile', {\n      url: '/profile',\n      templateUrl: '/templates/boards/profile.html',\n      controller: 'BoardsProfileController as boardsProfile'\n    })\n    .state('boardsIndex', {\n      url: '/boards',\n      templateUrl: '/templates/boards/index.html',\n      controller: 'BoardsIndexController as boardsIndex'\n    })\n    .state('boardsNew', {\n      url: '/boards/new',\n      templateUrl: '/templates/boards/new.html',\n      controller: 'BoardsNewController as boardsNew'\n    })\n    .state('boardsShow', {\n      url: '/boards/:id',\n      templateUrl: '/templates/boards/show.html',\n      controller: 'BoardsShowController as boardsShow'\n    })\n    .state('boardsEdit', {\n      url: '/boards/:id/edit',\n      templateUrl: '/templates/boards/edit.html',\n      controller: 'BoardsEditController as boardsEdit'\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('pinboardApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('profile');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('pinboardApp')\n  .factory('Board', Board);\n\nBoard.$inject = ['$resource'];\nfunction Board($resource) {\n  return new $resource('/boards/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('pinboardApp')\n  .controller('BoardsIndexController', BoardsIndexController)\n  .controller('BoardsNewController', BoardsNewController)\n  .controller('BoardsShowController', BoardsShowController)\n  .controller('BoardsEditController', BoardsEditController)\n  .controller('BoardsProfileController', BoardsProfileController);\n\nBoardsIndexController.$inject = ['Board'];\nfunction BoardsIndexController(Board) {\n  const boardsIndex = this;\n\n  boardsIndex.all = Board.query();\n}\n\nBoardsProfileController.$inject = ['Board', '$auth'];\nfunction BoardsProfileController(Board, $auth) {\n  const boardsProfile = this;\n  const currentUser = $auth.getPayload()._id;\n  boardsProfile.testing = 'Hello';\n\n  boardsProfile.all = Board.query({user: currentUser});\n}\n\nBoardsNewController.$inject = ['Board', '$state', '$auth'];\nfunction BoardsNewController(Board, $state, $auth) {\n  const boardsNew = this;\n  const currentUser = $auth.getPayload()._id;\n\n  boardsNew.board = {};\n  boardsNew.board.user = currentUser;\n\n  function create() {\n    Board.save(boardsNew.board, () => {\n      $state.go('boardsIndex');\n    });\n  }\n\n  boardsNew.create = create;\n}\n\nBoardsShowController.$inject = ['Board', '$state', '$auth'];\nfunction BoardsShowController(Board, $state, $auth) {\n  const boardsShow = this;\n  const currentUser = $auth.getPayload()._id;\n  boardsShow.pin = {};\n  boardsShow.formVisible = false;\n  boardsShow.belongsToUser = false;\n  boardsShow.toggleForm = toggleForm;\n  boardsShow.deletePin = deletePin;\n\n  function deletePin(pin) {\n    const index = boardsShow.board.pins.indexOf(pin);\n    boardsShow.board.pins.splice(index, 1);\n    boardsShow.board.$update();\n  }\n\n  function toggleForm() {\n    boardsShow.formVisible = boardsShow.formVisible ? false : true;\n  }\n\n  Board.get($state.params).$promise.then((board) => {\n    boardsShow.board = board;\n    boardsShow.user = board.user;\n    if(board.user._id === currentUser) {\n      boardsShow.belongsToUser = true;\n    }\n  });\n\n  function createPin(){\n    boardsShow.board.pins.push(boardsShow.pin);\n    boardsShow.board.$update(() => {\n      boardsShow.pin = {};\n      boardsShow.formVisible = false;\n    });\n  }\n\n  function like(pin) {\n    if (pin.likes.indexOf(currentUser) === -1) {\n      pin.likes.push(currentUser);\n    } else {\n      const index = pin.likes.indexOf(currentUser);\n      pin.likes.splice(index, 1);\n    }\n    boardsShow.board.$update();\n  }\n\n  boardsShow.createPin = createPin;\n  boardsShow.like = like;\n  boardsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nBoardsEditController.$inject = ['Board', '$state'];\nfunction BoardsEditController(Board, $state) {\n  const boardsEdit = this;\n\n  boardsEdit.board = Board.get($state.params);\n\n  function update() {\n    boardsEdit.board.$update(() => {\n      $state.go('boardsShow', $state.params);\n    });\n  }\n\n  function deleteBoard() {\n    boardsEdit.board.$remove(() => {\n      $state.go('boardsIndex');\n    });\n  }\n\n  boardsEdit.delete = deleteBoard;\n  boardsEdit.update = update;\n\n}\n","angular.module('pinboardApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.toggleNav = toggleNav;\n  main.menuVisible = false;\n\n  function toggleNav() {\n    main.menuVisible = main.menuVisible ? false : true;\n  }\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('home');\n      });\n  }\n\n  main.logout = logout;\n\n  main.message = null;\n  // const protectedStates = ['filmsEdit', 'filmsNew'];\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.menuVisible = false;\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n}\n","angular.module('pinboardApp')\n  .factory('Pin', Pin);\n\nPin.$inject = ['$resource'];\nfunction Pin($resource) {\n  return new $resource('/pins/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('pinboardApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}