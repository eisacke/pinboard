{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/board.js","js/controllers/boards.js","js/controllers/main.js","js/models/pin.js","js/models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","views","form@boardsShow","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","Board","$resource","id","update","method","BoardsIndexController","all","query","BoardsProfileController","boardsProfile","currentUser","getPayload","_id","BoardsNewController","create","save","boardsNew","board","BoardsShowController","mobile","$index","boardsShow","pins","forEach","pin","active","deletePin","index","indexOf","splice","$update","toggleForm","formVisible","repin","$promise","boards","userBoards","selectedPin","repinPin","push","createPin","like","likes","deleteBoard","$remove","belongsToUser","delete","isLoggedIn","isAuthenticated","get","params","MainController","$rootScope","toggleNav","main","menuVisible","logout","secureState","e","toState","message","protectedStates","includes","name","preventDefault","$on","Pin","User","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n  .module('pinboardApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('profile', {\n      url: '/profile',\n      templateUrl: '/templates/boards/profile.html',\n      controller: 'BoardsProfileController as boardsProfile'\n    })\n    .state('boardsIndex', {\n      url: '/boards',\n      templateUrl: '/templates/boards/index.html',\n      controller: 'BoardsIndexController as boardsIndex'\n    })\n    .state('boardsNew', {\n      url: '/boards/new',\n      templateUrl: '/templates/boards/new.html',\n      controller: 'BoardsNewController as boardsNew'\n    })\n    .state('boardsShow', {\n      url: '/boards/:id',\n      templateUrl: '/templates/boards/show.html',\n      controller: 'BoardsShowController as boardsShow'\n    })\n    .state('boardsShow.edit', {\n      url: '/edit',\n      views: {\n        'form@boardsShow': {\n          templateUrl: '/templates/boards/forms/editBoard.html'\n        }\n      }\n    })\n    .state('boardsShow.newPin', {\n      url: '/newPin',\n      views: {\n        'form@boardsShow': {\n          templateUrl: '/templates/boards/forms/newPin.html'\n        }\n      }\n    })\n    .state('boardsShow.repin', {\n      url: '/repin',\n      views: {\n        'form@boardsShow': {\n          templateUrl: '/templates/boards/forms/repin.html'\n        }\n      }\n    });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('pinboardApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('profile');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('pinboardApp')\n  .factory('Board', Board);\n\nBoard.$inject = ['$resource'];\nfunction Board($resource) {\n  return new $resource('/boards/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('pinboardApp')\n  .controller('BoardsIndexController', BoardsIndexController)\n  .controller('BoardsNewController', BoardsNewController)\n  .controller('BoardsShowController', BoardsShowController)\n  .controller('BoardsProfileController', BoardsProfileController);\n\nBoardsIndexController.$inject = ['Board'];\nfunction BoardsIndexController(Board) {\n  const boardsIndex = this;\n  boardsIndex.all = Board.query();\n}\n\nBoardsProfileController.$inject = ['Board', '$auth'];\nfunction BoardsProfileController(Board, $auth) {\n  const boardsProfile = this;\n  const currentUser = $auth.getPayload()._id;\n  boardsProfile.all = Board.query({user: currentUser});\n}\n\nBoardsNewController.$inject = ['Board', '$state', '$auth'];\nfunction BoardsNewController(Board, $state, $auth) {\n  const boardsNew = this;\n  const currentUser = $auth.getPayload()._id;\n\n  boardsNew.board = {};\n  boardsNew.board.user = currentUser;\n  boardsNew.create = create;\n\n  function create() {\n    Board.save(boardsNew.board, () => {\n      $state.go('boardsIndex');\n    });\n  }\n}\n\nBoardsShowController.$inject = ['Board', '$state', '$auth'];\nfunction BoardsShowController(Board, $state, $auth) {\n  const boardsShow = this;\n  boardsShow.currentUser = $auth.getPayload()._id;\n  boardsShow.pin = {};\n  boardsShow.formVisible = false;\n  boardsShow.belongsToUser = false;\n  boardsShow.deletePin = deletePin;\n  boardsShow.toggleForm = toggleForm;\n  boardsShow.delete = deleteBoard;\n  boardsShow.repinPin = repinPin;\n  boardsShow.update = update;\n  boardsShow.createPin = createPin;\n  boardsShow.repin = repin;\n  boardsShow.mobile = mobile;\n  boardsShow.like = like;\n  boardsShow.isLoggedIn = $auth.isAuthenticated;\n\n  Board.get($state.params).$promise.then((board) => {\n    boardsShow.board = board;\n    boardsShow.user = board.user;\n    if(board.user._id === boardsShow.currentUser) {\n      boardsShow.belongsToUser = true;\n    }\n  });\n\n  function mobile($index) {\n    boardsShow.board.pins.forEach((pin)=> {\n      pin.active = false;\n    });\n    boardsShow.board.pins[$index].active = boardsShow.board.pins[$index].active ? false : true;\n  }\n\n  function deletePin(pin) {\n    const index = boardsShow.board.pins.indexOf(pin);\n    boardsShow.board.pins.splice(index, 1);\n    boardsShow.board.$update();\n  }\n\n  function toggleForm() {\n    boardsShow.formVisible = boardsShow.formVisible ? false : true;\n  }\n\n  function repin(pin) {\n    Board.query({user: boardsShow.currentUser}).$promise.then((boards) => {\n      boardsShow.userBoards = boards;\n      boardsShow.selectedPin = pin;\n      boardsShow.formVisible = true;\n    });\n  }\n\n  function repinPin(board) {\n    board.pins.push(boardsShow.selectedPin);\n    board.$update((board) => {\n      $state.go('boardsShow', {id: board._id});\n    });\n  }\n\n  function createPin(){\n    boardsShow.board.pins.push(boardsShow.pin);\n    boardsShow.board.$update(() => {\n      boardsShow.pin = {};\n      boardsShow.formVisible = false;\n    });\n  }\n\n  function like(pin) {\n    if (pin.likes.indexOf(boardsShow.currentUser) === -1) {\n      pin.likes.push(boardsShow.currentUser);\n    } else {\n      const index = pin.likes.indexOf(boardsShow.currentUser);\n      pin.likes.splice(index, 1);\n    }\n    boardsShow.board.$update();\n  }\n\n  function update() {\n    boardsShow.board.$update(() => {\n      boardsShow.formVisible = false;\n    });\n  }\n\n  function deleteBoard() {\n    boardsShow.board.$remove(() => {\n      $state.go('boardsIndex');\n    });\n  }\n}\n","angular.module('pinboardApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.toggleNav = toggleNav;\n  main.menuVisible = false;\n  main.logout = logout;\n  main.message = null;\n\n  function toggleNav() {\n    main.menuVisible = main.menuVisible ? false : true;\n  }\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('home');\n      });\n  }\n\n  // const protectedStates = ['filmsEdit', 'filmsNew'];\n  const protectedStates = [];\n\n  function secureState(e, toState) {\n    main.menuVisible = false;\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    } else if ($auth.isAuthenticated() && toState.name === 'home') {\n      e.preventDefault();\n      $state.go('boardsIndex');\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n}\n","angular.module('pinboardApp')\n  .factory('Pin', Pin);\n\nPin.$inject = ['$resource'];\nfunction Pin($resource) {\n  return new $resource('/pins/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('pinboardApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}