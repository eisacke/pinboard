"use strict";function Router(o,r){o.state("home",{url:"/",templateUrl:"/templates/home.html"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("profile",{url:"/profile",templateUrl:"/templates/boards/profile.html",controller:"BoardsProfileController as boardsProfile"}).state("boardsIndex",{url:"/boards",templateUrl:"/templates/boards/index.html",controller:"BoardsIndexController as boardsIndex"}).state("boardsNew",{url:"/boards/new",templateUrl:"/templates/boards/new.html",controller:"BoardsNewController as boardsNew"}).state("boardsShow",{url:"/boards/:id",templateUrl:"/templates/boards/show.html",controller:"BoardsShowController as boardsShow"}).state("boardsEdit",{url:"/boards/:id/edit",templateUrl:"/templates/boards/edit.html",controller:"BoardsEditController as boardsEdit"}),r.otherwise("/")}function Auth(o){o.loginUrl="/login",o.signupUrl="/register",o.tokenPrefix=""}function RegisterController(o,r){function e(){o.signup(t.user).then(function(){r.go("login")})}var t=this;t.user={},t.submit=e}function LoginController(o,r){function e(){o.login(t.credentials).then(function(){r.go("profile")})}var t=this;t.credentials={},t.submit=e}function Board(o){return new o("/boards/:id",{id:"@_id"},{update:{method:"PUT"}})}function BoardsIndexController(o){var r=this;r.all=o.query()}function BoardsProfileController(o,r){var e=this,t=r.getPayload()._id;e.testing="Hello",e.all=o.query({user:t})}function BoardsNewController(o,r,e){function t(){o.save(l.board,function(){r.go("boardsIndex")})}var l=this,n=e.getPayload()._id;l.board={},l.board.user=n,l.create=t}function BoardsShowController(o,r,e){function t(){console.log("clicked"),i.formVisible=!i.formVisible}function l(){i.board.$remove(function(){r.go("boardsIndex")})}function n(){i.board.pins.push(i.pin),i.board.$update(function(){i.pin={}})}function a(o){if(o.likes.indexOf(s)===-1)o.likes.push(s);else{var r=o.likes.indexOf(s);o.likes.splice(r,1)}i.board.$update()}var i=this,s=e.getPayload()._id;i.pin={},i.formVisible=!1,i.toggleForm=t,o.get(r.params).$promise.then(function(o){i.board=o,i.user=o.user}),i.delete=l,i.createPin=n,i.like=a,i.isLoggedIn=e.isAuthenticated}function BoardsEditController(o,r){function e(){t.board.$update(function(){r.go("boardsShow",r.params)})}var t=this;t.board=o.get(r.params),this.update=e}function MainController(o,r,e){function t(){o.logout().then(function(){r.go("home")})}function l(e,t){n.message=null,!o.isAuthenticated()&&a.includes(t.name)&&(e.preventDefault(),r.go("login"),n.message="You must be logged in to go there!")}var n=this;n.isLoggedIn=o.isAuthenticated,n.logout=t,n.message=null;var a=[];e.$on("$stateChangeStart",l)}function Pin(o){return new o("/pins/:id",{id:"@_id"},{update:{method:"PUT"}})}function User(o){return new o("/users/:id",{id:"@_id"},{update:{method:"PUT"}})}angular.module("pinboardApp",["ngResource","ui.router","satellizer"]).config(Router).config(Auth),Router.$inject=["$stateProvider","$urlRouterProvider"],Auth.$inject=["$authProvider"],angular.module("pinboardApp").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("pinboardApp").factory("Board",Board),Board.$inject=["$resource"],angular.module("pinboardApp").controller("BoardsIndexController",BoardsIndexController).controller("BoardsNewController",BoardsNewController).controller("BoardsShowController",BoardsShowController).controller("BoardsEditController",BoardsEditController).controller("BoardsProfileController",BoardsProfileController),BoardsIndexController.$inject=["Board"],BoardsProfileController.$inject=["Board","$auth"],BoardsNewController.$inject=["Board","$state","$auth"],BoardsShowController.$inject=["Board","$state","$auth"],BoardsEditController.$inject=["Board","$state"],angular.module("pinboardApp").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("pinboardApp").factory("Pin",Pin),Pin.$inject=["$resource"],angular.module("pinboardApp").factory("User",User),User.$inject=["$resource"];
//# sourceMappingURL=app.js.map
