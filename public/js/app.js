"use strict";function Router(r,e){r.state("home",{url:"/",templateUrl:"/templates/home.html"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("profile",{url:"/profile",templateUrl:"/templates/boards/profile.html",controller:"BoardsProfileController as boardsProfile"}).state("boardsIndex",{url:"/boards",templateUrl:"/templates/boards/index.html",controller:"BoardsIndexController as boardsIndex"}).state("boardsNew",{url:"/boards/new",templateUrl:"/templates/boards/new.html",controller:"BoardsNewController as boardsNew"}).state("boardsShow",{url:"/boards/:id",templateUrl:"/templates/boards/show.html",controller:"BoardsShowController as boardsShow"}).state("boardsEdit",{url:"/boards/:id/edit",templateUrl:"/templates/boards/edit.html",controller:"BoardsEditController as boardsEdit"}),e.otherwise("/")}function Auth(r){r.loginUrl="/login",r.signupUrl="/register",r.tokenPrefix=""}function RegisterController(r,e){function o(){r.signup(t.user).then(function(){e.go("login")})}var t=this;t.user={},t.submit=o}function LoginController(r,e){function o(){r.login(t.credentials).then(function(){e.go("profile")})}var t=this;t.credentials={},t.submit=o}function Board(r){return new r("/boards/:id",{id:"@_id"},{update:{method:"PUT"}})}function BoardsIndexController(r){var e=this;e.all=r.query()}function BoardsProfileController(r,e){var o=this,t=e.getPayload()._id;o.testing="Hello",o.all=r.query({user:t})}function BoardsNewController(r,e,o){function t(){r.save(n.board,function(){e.go("boardsIndex")})}var n=this,l=o.getPayload()._id;n.board={},n.board.user=l,n.create=t}function BoardsShowController(r,e,o){function t(r){var e=i.board.pins.indexOf(r);i.board.pins.splice(e,1),i.board.$update()}function n(){i.formVisible=!i.formVisible}function l(){i.board.pins.push(i.pin),i.board.$update(function(){i.pin={},i.formVisible=!1})}function a(r){if(r.likes.indexOf(i.currentUser)===-1)r.likes.push(i.currentUser);else{var e=r.likes.indexOf(i.currentUser);r.likes.splice(e,1)}i.board.$update()}var i=this;i.currentUser=o.getPayload()._id,i.pin={},i.formVisible=!1,i.belongsToUser=!1,i.toggleForm=n,i.deletePin=t,r.get(e.params).$promise.then(function(r){i.board=r,i.user=r.user,r.user._id===i.currentUser&&(i.belongsToUser=!0)}),i.createPin=l,i.like=a,i.isLoggedIn=o.isAuthenticated}function BoardsEditController(r,e){function o(){n.board.$update(function(){e.go("boardsShow",e.params)})}function t(){n.board.$remove(function(){e.go("boardsIndex")})}var n=this;n.board=r.get(e.params),n.delete=t,n.update=o}function MainController(r,e,o){function t(){a.menuVisible=!a.menuVisible}function n(){r.logout().then(function(){e.go("home")})}function l(o,t){a.menuVisible=!1,a.message=null,!r.isAuthenticated()&&i.includes(t.name)&&(o.preventDefault(),e.go("login"),a.message="You must be logged in to go there!")}var a=this;a.isLoggedIn=r.isAuthenticated,a.toggleNav=t,a.menuVisible=!1,a.logout=n,a.message=null;var i=[];o.$on("$stateChangeStart",l)}function Pin(r){return new r("/pins/:id",{id:"@_id"},{update:{method:"PUT"}})}function User(r){return new r("/users/:id",{id:"@_id"},{update:{method:"PUT"}})}angular.module("pinboardApp",["ngResource","ui.router","satellizer"]).config(Router).config(Auth),Router.$inject=["$stateProvider","$urlRouterProvider"],Auth.$inject=["$authProvider"],angular.module("pinboardApp").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("pinboardApp").factory("Board",Board),Board.$inject=["$resource"],angular.module("pinboardApp").controller("BoardsIndexController",BoardsIndexController).controller("BoardsNewController",BoardsNewController).controller("BoardsShowController",BoardsShowController).controller("BoardsEditController",BoardsEditController).controller("BoardsProfileController",BoardsProfileController),BoardsIndexController.$inject=["Board"],BoardsProfileController.$inject=["Board","$auth"],BoardsNewController.$inject=["Board","$state","$auth"],BoardsShowController.$inject=["Board","$state","$auth"],BoardsEditController.$inject=["Board","$state"],angular.module("pinboardApp").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("pinboardApp").factory("Pin",Pin),Pin.$inject=["$resource"],angular.module("pinboardApp").factory("User",User),User.$inject=["$resource"];
//# sourceMappingURL=app.js.map
